name: Read the content of files that were updated in the PR

#on:
#  pull_request:
#    branches:
#      - master
on:
  push:
    branches:
      - testing

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./scripts

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: set env variabless
        #run: |
        #  git log -10 --oneline | cut -d' ' -f1
        #  git diff --name-only ${{ github.event.before }} ${{ github.sha }}
        #run: echo "FILES_CHANGED=$(git log -10 --oneline | cut -d' ' -f1)" >> $GITHUB_ENV
        #env:
        #  FILES_CHANGED: $(git diff --name-only ${{ github.event.before }} ${{ github.sha }}) 
        run: echo "FILES_CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep network | xargs)" >> $GITHUB_ENV
        shell: bash
       
      - name:  create copy of changed files to compare
        working-directory: ./
        run: |
          for file in $FILES_CHANGED; do
            touch $file.compare
            git show ${{ github.event.before }}:$file > $file.compare
            echo $file $file.compare
          done 

      #- name: Run pr changed files script
      #  run: |
      #    echo "Files changed: $FILES_CHANGED"
      #    files=$(echo "${FILES_CHANGED}")
      #    ./print-pr-files-changed-full.py $files
      #    #./hello-world.py
      #  shell: bash
